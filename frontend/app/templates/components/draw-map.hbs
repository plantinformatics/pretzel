{{queryParamsService.urlOptionsEffect}}

{{!-- <div class="resizer" style="float:right;">
</div> The resizer in mapview adjacent this works so this is probably not needed. --}}

<div id='holder' class="bordered">
  <!--<ul>
       <li>{{selectedMapset.name}}</li>
       </ul> -->
  <div id="headsUp">{{headsUp.tipText}}</div>


  <div id="popoverTarget" style="float:right"></div>
  <div style="margin-left : 2em">
    <input type="checkbox"
      id="enable-stacks-frames"
      checked={{this.showStacksFrames}}
      oninput={{action (action (mut this.showStacksFrames)) value="target.checked" }}  >
    <label for="enable-stacks-frames">Show Stacks Frames</label>
  </div>
  {{#if this.showStacksFrames}}
    {{draw/stacks-frames  oa=oa drawMap=this axes2d=axes2d  }}
  {{/if}}
</div>

{{yield}}

<div class="devel-visible">
  {{resizeEffect}} {{drawEffect}} 
  {{draw/stacks-view stacks=oa.stacks oa=oa drawMap=this axes2d=axes2d
    featuresInBlocks=featuresInBlocks
  }}
  {{!-- This info will be thinned or removed as axes development progresses. --}}

  {{!-- wait until targetId="toolTip" will resolve --}}
  {{#if toolTipCreated }}
    {{!-- 2nd line of args passed are through to path-hover --}}
    {{contain-change  targetId="toolTip"    closeToolTip=(action "closeToolTipA") 
      drawMap=this data=oa
    }}
  {{/if}}
  <div>paths : {{paths.length}}</div>
</div>
{{draw/link-path stackEvents=this pathReceiver=this modelParamOptions=params.options}}

<div class="devel-visible">
  <div>brushedAxes : {{flowsService.axisBrush.brushedAxes.length}}</div>

  <div>{{blockService.viewedIds.length}},  blockAdjs : {{flowsService.blockAdjIds.length}}  {{flowsService.blockAdjsCP.length}}</div>
  <div>
    {{#each flowsService.blockAdjs as |blockAdj| }}
      {{draw/block-adj blockAdj=blockAdj drawMap=this  xOffsets=xOffsets }}
    {{/each}}
  </div>
</div>

{{#if axisFeatureCircleHover}}
  {{path-hover data=oa features=hoverFeatures }} {{!-- targetId=axisFeatureTargetId  "holder" --}}
{{/if}}
{{#if urlOptions.hoverFeatures}}
  <div class="hoverFeatures">
    <span>Hovered Features</span>
    {{#each hoverFeatures as |feature|}}
      <div>
        {{feature-name data=oa feature=feature}}
        {{#each (maps-of-feature oa feature) as |map|}}
          {{ map.name }}
        {{/each}}
      </div>
    {{/each}}
  </div>
{{/if}}


{{!-- --------------------------------------------------------------------- --}}
