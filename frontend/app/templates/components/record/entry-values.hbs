{{!-- log 'entry-values' values valueIsArray valueIsDatasetsArray valueIsBlocksArray valuesIsMap values_dataTypeName0 parentDone values_levelComponent values_dataTypeName 'name' name values.name (or name values.name) --}}

{{#if this.valueIsDatasetsArray}}
  {{!-- log 'entry-datasets' values --}}
  {{record/entry-datasets
    loadBlock="loadBlock"
    selectBlock=(action 'selectBlock')
    selectedBlock=this.selectedBlock
    selectDataset=(action 'selectDataset')
    selectedDataset=this.selectedDataset
    data=this.values}}

{{else if this.valueIsBlocksArray }}   {{!-- type is blocks array --}}
  {{!-- log 'entry-blocks' --}}
  {{record/entry-blocks
    loadBlock="loadBlock"
    data=this.values
    selectBlock="selectBlock"
    selectedBlock=this.selectedBlock
    selectDataset=(action 'selectDataset')}}

{{else if (or this.valuesModelName (and this.values_levelComponent (not-eq this.values_levelComponent 'record/entry-values') (not this.parentDone) ) ) }}
  {{!-- log  'values' values 'levelComponent' values_levelComponent --}}
  {{component
    this.values_levelComponent
    levelMeta=this.levelMeta
    name=(or this.name this.values.name this.values_dataName)
    values=this.values
    data=this.values
    valuesCase='parentDone'
    parentDone=true
    controlOptions=this.controlOptions
    loadBlock="loadBlock"
    selectExpander=this.selectExpander
    selectBlock="selectBlock"
    selectedBlock=this.selectedBlock
    selectDataset=(action 'selectDataset')
  }}

{{else if this.valueIsArray}}
  {{!-- log 'valueIsArray' --}}

  {{#each this.values as |value index|}}
    {{!-- log  'value' value 'index' index 'levelComponent' values_levelComponent --}}
    {{record/entry-values
      values=value
      levelMeta=this.levelMeta
      parentName=this.name
      valuesCase='valueIsArray'
      controlOptions=this.controlOptions
      loadBlock="loadBlock"
      selectExpander=this.selectExpander
      selectBlock="selectBlock"
      selectedBlock=this.selectedBlock
      selectDataset=(action 'selectDataset')
    }}
  {{/each}}

{{else if this.valuesIsMap}}
  {{!-- log 'valuesIsMap:each' --}}

  {{#each this.values as |key value|}}
    {{#with (compute (action 'levelComponent' value)) as |subComponent|}}
      {{!-- log  'value' value 'key' key 'subComponent' subComponent --}}
      {{component
        subComponent
        levelMeta=this.levelMeta
        name=key
        values=value
        data=value
        valuesCase='valuesIsMap'
        parentName=this.name
        controlOptions=this.controlOptions
        loadBlock="loadBlock"
        selectBlock="selectBlock"
        selectedBlock=this.selectedBlock
        selectDataset=(action 'selectDataset')
      }}
    {{/with}}
  {{/each}}

{{else if this.valuesIsOntologyTree}}
  {{!-- log 'valuesIsOntologyTree:each' --}}

  {{#each this.values.children as |value index|}}
    {{!-- log  'value' value 'index' index 'levelComponent' values_levelComponent --}}
    {{record/entry-values
      values=value
      levelMeta=this.levelMeta
      name=(compute (action this.ontologyNameId value))
      parentName=this.values.id
      loadBlock="loadBlock"
      controlOptions=this.controlOptions
      selectExpander=this.selectExpander
      selectBlock="selectBlock"
      selectedBlock=this.selectedBlock
      selectDataset=(action 'selectDataset')
    }}
  {{/each}}

{{else if this.valuesIsObject }}
  {{!-- log 'each-in' --}}

  {{#each this.keyValuesSorted as |keyValue|}}
   {{#let keyValue.key keyValue.value as |key value|}}
    {{#with (compute (action 'levelComponentEach' value)) as |subComponent|}}
      {{!-- log  'key' key 'value' value 'subComponent' subComponent --}}
      {{component
        subComponent
        levelMeta=this.levelMeta
        name=(or value.name key)
        values=value
        valuesCase='valuesIsObject'
        data=value
        parentName=this.name
        controlOptions=this.controlOptions
        selectExpander=this.selectExpander
        loadBlock="loadBlock"
        selectBlock="selectBlock"
        selectedBlock=this.selectedBlock
        selectDataset=(action 'selectDataset')
      }}
    {{/with}}
   {{/let}}
  {{/each}}

{{/if}}
