<div style="padding: 1em">

  {{panel/feature-list
    queryParamsState=this.queryParamsState
    getBlocksOfFeatures=(action this.actions.getBlocksOfFeatures)
    selectedFeatures=this.selectedFeatures }}


  {{#if false}}	{{!-- debug trace --}}
    <div>
      <ul class="list-group">
        {{#each this.selectedFeatures key="Feature" as |feature|}}
          <li class="list-group-item">
            {{ feature.Chromosome }}
            {{ feature.Feature }}
            {{ feature.Position }}
          </li>
        {{/each}}
      </ul>
    </div>
  {{/if}}


  {{#if this.matchAliases }}
    {{#with (keys this.featuresAliases.search) as |featureNames|}}
      {{#if featureNames.length }}
        <div>
          <span>Aliases found :</span>
          <ul style="list-style:none">
            {{#each-in this.featuresAliases.search as |aliasedFeature aliases|}}
              <li>{{aliasedFeature}} ( {{aliases}} )</li>
            {{/each-in}}
          </ul>
        </div>
      {{/if}}
    {{/with}}
  {{/if}}

  <span style="display: inline-block;">
    <input
      type="checkbox"
      name="matchRegExp"
      checked={{this.matchRegExp}}
      oninput={{action this.matchRegExpChanged value='target.checked' preventDefault=false}}
      id="checkbox-matchRegExp"
    />
    <label for="checkbox-matchRegExp">Match part & ignore case</label>
  </span>

  {{!-- If aliases are not loaded in the database, then display of this checkbox
    can be disabled in the server runtime environment. This prevents presenting
    a distracting option to the user; enabling the checkbox has no effect if
    there are no aliases.
    For example aliases may be loaded for 90k and SSR to support feature search
    and paths-by-alias, which is not limited by this flag.
    --}}
  {{#if this.urlOptions.aliasesSearch }}
  <span style="display: inline-block;">
    <input
      type="checkbox"
      name="matchAliases"
      checked={{this.matchAliases}}
      oninput={{action this.matchAliasesChanged value='target.checked' preventDefault=false}}
      id="checkbox-matchAliases"
    />
    <label for="checkbox-matchAliases">Match aliases</label>
  </span>
  {{/if}}

  <div class="clear-both"></div>

  {{!-- same icon as button-refresh, but override colour.
   Use .list-group to get some margin-bottom; when upgrading bootstrap from 3
   to 4, can use .mb-3

   classNames is not updating when loaded; also tried :
   classNames=(concat "btn btn-info pull-right" (if loading 'disabled'))
   --}}
  {{#elem/button-base
     click=(action "getBlocksOfFeatures")
     classNames=this.refreshClassNames
     icon='refresh'
     classColour="primary"
  }}
    <span>&nbsp; Search</span>
  {{/elem/button-base}}

  <button type="button" onclick={{action this.clearResults}}
    class="btn btn-info btn-xs pull-right" style="margin-right: 1em;">
    Clear
  </button>


  {{!-- The above (if loading 'disabled') is not effective, so display
   ⏰  U+023F0  ALARM CLOCK --}}
  {{#if this.loading }}
    <div class="pull-right" style="margin-right:2em;">
      Searching ... &nbsp; &nbsp; &nbsp; &#x23F0;
    </div>
  {{/if}}

  {{!-- →	&#8594;	&rarr;	RIGHTWARDS ARROW --}}

  <div style="clear:both; margin-top : 4ex;">
   {{#if this.showResult}}
    {{#if this.taskGet.lastPerformed}}
      {{#unless this.loading }}
        <label>Received :</label>
        <ul style="list-style-type: none;">
          <li>{{this.blocksOfFeatures.length}} Features</li>
          {{!-- if this.matchAliases the result shape is Features [],
             otherwise { aliases: [...], features: [...] }
             Using this.matchAliases in this if expression does not currently update,
             but will probably work after converting this component from
             Ember Component to a native class which extends glimmer Component  --}}
          {{#if this.taskGet.lastPerformed.value.aliases }}
            <li>{{this.aliases.length}} Aliases</li>
          {{/if}}
          {{#if this.featuresResultTruncated}}
            <li>{{this.featuresResultTruncated}}</li>
          {{/if}}
        </ul>
      {{/unless}}
    {{/if}}
   {{/if}}
  </div>
</div>


<ul class="list-group blocks-found">
  {{#each this.blocksOfFeatures key="key.id" as |block|}}
    <li class="list-group-item">
      {{record/entry-block-add
        entry=block.key.record
        features=block.values
        featuresAliases=this.featuresAliases.result
        loadBlock=this.loadBlock
      }}
    </li>
  {{/each}}
</ul>
