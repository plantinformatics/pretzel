{{#elem/panel-container state="primary" as |panelContainer|}}
  {{#elem/panel-heading icon="option-vertical" panelContainer=panelContainer}}
    Selected Axis Options
  {{/elem/panel-heading}}
  {{#if panelContainer.showComponent}}
  <ul class="list-group view-controls">
    <li class="list-group-item">
      <div class="btn-group btn-group-sm btn-group-justified">
        <div class="btn-group ff-alpha">
          {{#elem/button-base
             icon="adjust"
             classColour="primary"
             click=(action "clearScaffoldColours")}}
            Clear Scaffold Colours
          {{/elem/button-base}}
        </div>
        <div class="btn-group">
          {{#elem/button-base
             icon="random"
             classColour="primary"
             click=(action "flipRegion")}}
            Flip Region
          {{/elem/button-base}}
        </div>
        <div class="btn-group">
          {{#elem/button-base
             icon="resize-full"
             classColour="primary"
             click=(action "resetZooms")}}
            Reset Zooms
          {{/elem/button-base}}
        </div>
      </div>
    </li>

    <li class="list-group-item">
      <div>
        <ul class="nav nav-tabs li-active-extra">
          <!-- To change the initial active tab, change .active class of both .active-detail and .tab-pane; change also .in class of the latter.
               also change send(pathTabActive ) in didInsertElement()
             -->
          <li class="active-detail">
            <a data-toggle="tab" href="#tab-paths-density" onclick={{action "pathTabActive" "density"}}>Paths - Density</a>
            <div>{{ this.pathControlActiveDensity }}</div>
          </li>
          <li class="active-detail active">
            <a data-toggle="tab" href="#tab-paths-sample" onclick={{action "pathTabActive" "sample"}}>- Sample</a>
            <div>{{ this.pathControlActiveSample }}</div>
          </li>

        </ul>

        <div class="tab-content">

          <div id="tab-paths-density" class="tab-pane fade">
            <input type="range" 
              id="range-pathDensity" 
              value={{this.pathDensity}}
              oninput={{action (mut this.pathDensity) value="target.value"}}
              min="-50" max="50"
            >
          </div>

          <div id="tab-paths-sample" class="tab-pane fade in active">
            <input type="range" 
              id="range-pathSample" 
              value={{this.pathSample}}
              oninput={{action (mut this.pathSample) value="target.value"}}
              min="0" max="100"
            >
          </div>

        </div>

      </div>

    </li>
    <li class="list-group-item">
      <div>
        {{input type="checkbox" checked=this.pathsViaStream class="toggle"}}
        <label>Path Stream</label>
        <span class="sub-label"> Limit : <span>{{ this.pathControlNFeatures }}</span></span>
      </div>
      <div>
        <input type="range" 
          id="range-pathNFeatures" 
          value={{this.pathNFeatures}} 
               oninput={{action (mut this.pathNFeatures) value="target.value"}}
          min="0" max="100"
        />
      </div>

    </li>

    <li class="list-group-item">
      <div>
        <label>Binned Feature Counts</label>
        <div class="sub-label"> Number of Bins : <span>{{ this.featuresCountsNBins }}</span></div>
      </div>
      <div>
        <input type="range" 
         id="range-featuresCountsNBinsLinear" 
         value={{this.featuresCountsNBinsLinear}} 
               oninput={{action (mut this.featuresCountsNBinsLinear) value="target.value"}}
         min="0" max="100"
        />
      </div>

      <div>
        <span class="sub-label"> Threshold : <span>{{ this.featuresCountsThreshold }}</span></span>
      </div>
      <div>
        <input type="range" 
         id="range-featuresCountsThresholdLinear" 
         value={{this.featuresCountsThresholdLinear}} 
               oninput={{action (mut this.featuresCountsThresholdLinear) value="target.value"}}
         min="0" max="100"
        />
      </div>
    </li>



    <li class="list-group-item">
      <label>Distributed Join</label>
      <span class="filter-group-col">
        {{input type="checkbox" name="pathJoinClient" checked=this.pathJoinClient }}
        <label>Client</label>
      </span>
      <span class="filter-group-col">
        {{input type="checkbox" name="pathJoinRemote" checked=this.pathJoinRemote }}
        <label>Server</label>
      </span>
    </li>

    <li class="list-group-item">
      <span class="filter-group-col">
        {{input type="checkbox" name="modeBarLine" checked=this.chartBarLine }}
        <label>Chart Bar / Line</label>
      </span>
    </li>

    <li class="list-group-item">
      <input type="checkbox" 
        checked={{this.drawOptions.showPathHover}}
        oninput={{action (mut this.drawOptions.showPathHover) value="target.checked"}} 
      />
      <label>Path Hover info</label>
    </li>
    <li class="list-group-item">
      <input type="checkbox" 
        checked={{this.drawOptions.continuousPathUpdate}}
        oninput={{action this.continuousPathUpdateChanged value="target.checked"}}
      />
      <label>Path update during drag</label>
    </li>

    <li class="list-group-item  horiz-2">
      <div>
        <input type="checkbox"
          checked="checked"
          oninput={{action this.hideAxisTextClass}}  >
        <label>Show Axis Text</label>
      </div>
      <div>
        <input type="checkbox"
          checked={{this.axisTitleChrOnly}}
          oninput={{action (mut this.axisTitleChrOnly) value="target.checked"}}  >
        <label>Only Chr in title</label>
      </div>
    </li>

    <li class="list-group-item">
      <input type="checkbox"
        checked="checked"
        oninput={{action (mut this.axisTicksOutside) value="target.checked"}}  >
      <label>Axis Ticks on Outer side</label>
    </li>

    <li class="list-group-item">
      <input type="checkbox" 
        checked={{not this.drawOptions.publishMode}}
        oninput={{action this.publishModeChanged value="target.checked"}}
      />
      <label>Show Zoom/Reset buttons</label>
    </li>

    <li class="list-group-item">
      <label>Show Features which</label>
      <span class="filter-group-col">
        {{input
          type="checkbox"
          name="featureIntervalOverlap"
          checked=this.featureIntervalOverlap
          input=(action this.featureIntervalOverlapChanged preventDefault=false)
        }}
        <label>overlap</label>
      </span>
      <span class="filter-group-col">
        {{input
          type="checkbox"
          name="featureIntervalContain"
          checked=this.featureIntervalContain
          input=(action this.featureIntervalContainChanged preventDefault=false)
        }}
        <label>contain</label>
      </span>
      <label>the zoom or brush scope.</label>
    </li>

    <li class="list-group-item">
      <label style="display:inline">When only 1 end of alignment path is within zoom, show :</label>
      {{radio-button
        value='tick'
        groupValue=this.tickOrPath
        changed=(action this.tickOrPathChanged preventDefault=false)
      }}
      tick &nbsp;&nbsp;
      {{radio-button
        value="path"
        groupValue=this.tickOrPath
        changed=(action this.tickOrPathChanged preventDefault=false)
      }}
      path &nbsp;&nbsp;
      {{radio-button
        value='nothing'
        groupValue=this.tickOrPath
        changed=(action this.tickOrPathChanged preventDefault=false)
      }}
      nothing

    </li>

    <li class="list-group-item">
      <input type="checkbox" 
       checked={{this.drawOptions.showSelectedFeatures}}
       oninput={{action this.showSelectedFeaturesChanged value="target.checked"}}
      />
      <label>List Selected Features</label>
      {{#ember-tooltip side="bottom-start"  delay=500}}
        List Selected Features in the Feature table in right panel.
      {{/ember-tooltip}}
    </li>
    <li class="list-group-item horiz-2">
      <div>
      <span class="filter-group-col">
        {{input type="checkbox" name="pathGradientUpper" checked=this.pathGradientUpper }}
        {{#ember-tooltip side="right" delay=500}}
          Use threshold as an upper / lower limit.
        {{/ember-tooltip}}
      </span>
      <label class="inline-margin">Path Colinearity Threshold : {{this.pathGradient}}</label>
      <input type="range" 
       id="range-pathGradient" 
       name="pathGradient" 
       min="0" max="100"
       value={{this.pathGradientInt}}
       oninput={{action (mut this.pathGradientInt) value="target.value"}}
      />
      </div>
      <div>
        {{#ember-tooltip side="bottom" delay=500}}
          Number of neighbours of each path to consider in distance average against threshold.
        {{/ember-tooltip}}

        <label>Path neighbours</label>
        <span class="sub-label">{{ this.pathNeighbours }}</span>
        <input type="range"
         value=3
         oninput={{action this.pathNeighboursInput}}
         min="1" max="30"
        />
      </div>
    </li>

    <li class="list-group-item">
      <label>Path Opacity</label>
      <input type="range" 
       oninput={{action this.pathOpacityInput}}
       min="0" max="100"
       value="100"
      />
    </li>
    <li class="list-group-item">
      <label>Path Width</label>
      <input type="range" 
       oninput={{action this.pathWidthInput}}
       min="0" max="300"
       value="75"
      />
    </li>

    <li class="list-group-item">
      <div>
        <label title="Extra space outside the left and right-most axes">Outside Axis Margin</label>
        <input type="range"
         value={{this.extraOutsideMargin}}
         oninput={{action (pipe
           (action (mut this.extraOutsideMargin) value="target.value")
           (action this.aSliderHasChanged ) )}}
         min="0" max="500"
        />
      </div>
    </li>

    <li class="list-group-item horiz-2">
      <div>
        <label>Axis Width</label>
        <input type="range"
         value=10
         oninput={{action this.axisWidthInput}}
         min="0" max="100"
        />
      </div>
      <div>
        <label># Ticks</label>
        <span class="sub-label">{{ this.axisTicks }}</span>
        <input type="range"
         value=10
         oninput={{action (mut this.axisTicks) value="target.value" }}
         min="0" max="35"
        />
      </div>
    </li>

    <li class="list-group-item horiz-2">
      <div>
        <label>QTL : Diamond Size</label>
        <input type="range"
         value=20
         oninput={{action this.diamondWidthInput}}
         min="0" max="100"
        />
      </div>
      <div>
        <label>Offset</label>
        <input type="range"
         value=0
         oninput={{action this.diamondOffsetInput}}
         min="-100" max="50"
        />
      </div>
    </li>


    <li class="list-group-item horiz-2">
    
      <div>
        <label>Graph Text Size</label>
        <span class="sub-label" style="margin-left: 7px;">{{ this.titleTextSize }}</span>
      <input type="range"
       value=4
       oninput={{action this.titleTextSizeInput}}
       min="0" max="9"
      />
      </div>

      <div>
        <label>Ticks Text Size</label>
        <span class="sub-label">{{ this.axisFontSize }}</span>
        <input type="range"
         value=10
         oninput={{action (pipe
           (action (mut this.axisFontSize) value="target.value")
           (action this.axisFontSizeChanged ) )}}
         min="0" max="35"
        />
      </div>

    </li>

    <li class="list-group-item horiz-2">

      <div>
        <label>QTL : Black Opacity</label>
        <input type="range"
         value=16
         oninput={{action this.qtlUncolouredOpacityInput}}
         min="0" max="15"
        />
      </div>

      <div>
        <div>
          <label>QTL layer maximum</label>
          <span class="sub-label">
          {{input
            type="text"
            value=this.axisLayerModulusText
            enter=(action this.axisLayerModulusTextChanged value=this.target.value)
            id="axisLayerModulusText"
          }}
          </span>
        </div>
        <input type="range"
         id="range-axisLayerModulus" 
         min="0" max="50"
         value={{this.axisLayerModulusLinear}}
         oninput={{action this.axisLayerModulusLinearChanged value="target.value"}}
        />
      </div>

    </li>

    <li class="list-group-item">
      <div>
        <label>Synteny Block Size Threshold</label>
        <span class="sub-label">
        {{input
          type="text"
          value=this.sbSizeThresholdText
          enter=(action this.sbSizeThresholdTextChanged value=this.target.value)
          id="sbSizeThresholdText"
        }}
        </span>
      </div>
      <input type="range"
       id="range-sbSizeThreshold" 
       min="0" max="50"
       value={{this.sbSizeThresholdLinear}}
       oninput={{action this.sbSizeThresholdLinearChanged value="target.value"}}
      />
    </li>

    <li class="list-group-item">
      <div>
        <label style="float:right">Times (ms)</label>
        <span class="sub-label"> Debounce : <span>{{ this.debounceTime }}</span></span>
      </div>
      <div>
        <input type="range" 
         id="range-debounceTime" 
         name="debounceTime" 
         min="0" max="2000"
         value={{this.debounceTime}} 
         oninput={{action (mut this.debounceTime) value="target.value"}}
        />
      </div>
      <div>
        <span class="sub-label"> Throttle : <span>{{ this.throttleTime }}</span></span>
      </div>
      <div>
        <input type="range" 
         id="range-throttleTime" 
         name="throttleTime" 
         min="0" max="2000"
         value={{this.throttleTime}} 
         oninput={{action (mut this.throttleTime) value="target.value"}}
        />
      </div>

    </li>

  </ul>
  {{/if}} {{!-- showComponent --}}
{{/elem/panel-container}}
