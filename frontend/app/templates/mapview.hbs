{{!-- app/controllers/mapview.js --}}
<div {{split-view direction='horizontal'
  sizes=this.leftSplitSizes
  gutterSize=15
  registerInstance=(action this.registerInstanceLeftSplit)
  onDragEnd=(action this.leftSplit_onDragEnd) }}
  class="left-split"
  style="height:100%; display:flex;">
  
  {{panel/left-panel
    displayData=this.block.viewed
    loadBlock=(action this.actions.loadBlock)
    removeBlock=(action this.actions.removeBlock)
    selectBlock=(action this.actions.selectBlock)
    selectDataset=(action this.actions.selectDataset)
    selectedDataset=this.selectedDataset

    model=this.model
    queryParamsState=this.queryParamsState
    datasets=this.datasets
    refreshDatasets=(action "updateModel")
    viewDataset=(action this.viewDataset)
    selectedBlock=this.selectedBlock
    controls=this.controls
    isShowUnique=this.isShowUnique
    pathColourScale=this.pathColourScale
    scaffolds=this.scaffolds
    scaffoldMarkers=this.scaffoldMarkers
    showScaffoldFeatures=this.showScaffoldFeatures
    showAsymmetricAliases=this.showAsymmetricAliases
    selectedFeatures=this.selectedFeatures
    updateFeaturesInBlocks="updateFeaturesInBlocks"
  }}
  
  {{!-- rerender : a changing value will cause split-view to update (destroy and re-create) the split.js, see ember-split-view-modifier/addon/modifiers/split-view.js : didUpdate().
        onDragEnd : described in split.js/README.md : Documentation --}}
  <div {{split-view direction=this.splitViewDirection
    rerender=this.splitViewDirection
    onDragEnd=(action this.onDragEnd)
    sizes=this.sizesPrev minSize=(array 20 5)
    gutterSize=15}}
    class="right-split" >


  <div>

    <p class="devel-visible">
      hasData {{this.hasData}},
      mapsToView {{this.model.params.mapsToView}},
      datasets task value {{this.model.availableMapsTask.value.length}},
      availableMaps {{ this.dataset.values.length }}
      available blockValues {{this.block.blockValues.length}},
      selected blocks {{this.block.selected.length}},
      viewed blocks {{this.block.viewed.length}},
      queryParamsValue {{ this.queryParamsValue }},
      viewedIds {{ this.block.viewedIds.length }},
    </p>
    {{!-- {{#if hasData}} --}}
    {{!-- Ember.Component.layout is reserved, so pass mapview .layout as panelLayout --}}
      {{draw-map
        data=this.block.viewed
        drawActions=this
        oa=this.oa
        model=this.model
        panelLayout=this.layout
        controls=this.controls
        componentGeometry=this.componentGeometry
        isShowUnique=this.isShowUnique
        pathColourScale=this.pathColourScale
        scaffolds=this.scaffolds
        scaffoldMarkers=this.scaffoldMarkers
        showScaffoldFeatures=this.showScaffoldFeatures
        showAsymmetricAliases=this.showAsymmetricAliases
        highlightFeature=this.model.params.highlightFeature
        params=this.model.params
        selectedBlock=this.selectedBlock
        addMap='addMap'
        selectBlock=(action this.actions.selectBlock)
        removeBlock=(action this.actions.removeBlock)
        updatedSelectedFeatures=(action this.actions.updateSelectedFeatures)
        featuresInBlocks=this.featuresInBlocks
        selectChromById=(action 'selectBlockById')}}
    {{!-- {{/if}} --}}

  </div>

    <div>

      <div>layout.right{{this.layout.right.visible}},{{this.layout.right.tab}}</div>
  {{#if this.layout.right.visible}}
    <div id="right-panel" class="h-100">

      <ul class="nav nav-tabs">
        {{#if this.model.params.parsedOptions.blockTab}}
          {{#elem/button-tab
             side="right"
             key="block"
             state=this.layout.right.tab onClick=(action "setTab") }}
            {{elem/icon-base name="globe"}}&nbsp; Block
          {{/elem/button-tab}}
        {{/if}}

        {{#elem/button-tab
           side="right"
           key="dataset"
           state=this.layout.right.tab onClick=(action "setTab") }}
          {{elem/icon-base name="globe"}}&nbsp; Dataset
        {{/elem/button-tab}}

        {{#elem/button-tab
           side="right"
           key="selection"
           state=this.layout.right.tab onClick=(action "setTab") }}
          {{elem/icon-base name="asterisk"}}&nbsp; Features <span class="badge">{{this.selectedFeatures.length}}</span>
        {{/elem/button-tab}}

        {{#elem/button-tab
           side="right"
           key="paths"
           state=this.layout.right.tab onClick=(action "setTab") }}
          {{elem/icon-base name="globe"}}&nbsp; Paths <span class="badge">{{this.pathsTableSummary.count}}</span>
        {{/elem/button-tab}}

        {{#elem/button-tab
           side="right"
           key="genotype"
           state=this.layout.right.tab onClick=(action "setTab") }}
          {{elem/icon-base name="barcode"}}&nbsp; Genotypes <span class="badge"></span>

          {{#if this.enableGenotypeControlsDialog}}
            <span style="margin:1em; width: 20%;">
              {{#elem/icon-toggle state=this.userSettings.genotype.hideControls iconTrue='collapse-down' iconFalse='expand' }}
              {{#ember-tooltip side="right" delay=500}}
              Toggle display of Genotype Table controls and filters.
              {{/ember-tooltip}}
              {{/elem/icon-toggle}}
            </span>
          {{/if}}

        {{/elem/button-tab}}

        {{#if this.model.params.parsedOptions.advSettings}}
          {{#elem/button-tab
             side="right"
             key="settings"
             state=this.layout.right.tab onClick=(action "setTab") }}
            {{elem/icon-base name="cog"}}&nbsp; Adv.
          {{/elem/button-tab}}
        {{/if}}
        {{#elem/button-tab
           class="pull-right"
           side="right"
           onClick=(action "setVisibility")}}
          {{elem/icon-base name="remove"}}
        {{/elem/button-tab}}
        {{#elem/button-tab
           class="pull-right rotate45"
           side="right"
           onClick=(action this.toggleLayout)}}
          {{elem/icon-base name="sort"}}
        {{/elem/button-tab}}
      </ul>

      <div id="right-panel-content"  class={{this.rightPanelClass}}>
        {{#if (compare this.layout.right.tab '===' 'selection')}}
          {{panel/manage-features
            selectedFeatures=this.selectedFeatures
            selectedBlock=this.selectedBlock}}
        {{else if (compare this.layout.right.tab '===' 'block')}}
          {{panel/manage-block
            selectedFeatures=this.selectedFeatures
            loadBlock=this.loadBlock
            block=this.selectedBlock}}
        {{else if (compare this.layout.right.tab '===' 'dataset')}}
          {{panel/manage-dataset
            dataset=this.selectedDataset}}
          {{panel/axis-brushes}}
        {{else if (compare this.layout.right.tab '===' 'genotype')}}
          {{panel/manage-genotype
            model=this.model
            selectBlock=(action this.actions.selectBlock)
            selectedBlock=this.selectedBlock
            selectedFeatures=this.selectedFeatures
            updatedSelectedFeatures=(action this.actions.updateSelectedFeatures)
            userSettings=this.userSettings.genotype
            }}

        {{else if (and (compare this.layout.right.tab '===' 'settings') this.model.params.parsedOptions.advSettings)}}
          {{panel/manage-settings
            selectedFeatures=this.selectedFeatures
            selectedBlock=this.selectedBlock}}

          {{selected-markers
            data=this.selectedFeatures
            scaffolds=this.scaffolds
            scaffoldMarkers=this.scaffoldMarkers
            showScaffoldFeatures=this.showScaffoldFeatures}}

        {{/if}}

        {{panel/paths-table
          visible=(compare this.layout.right.tab '===' 'paths')
          selectedFeatures=this.selectedFeatures
          selectedBlock=this.selectedBlock
          updatePathsCount=(action this.actions.updatePathsCount)}}

      </div>

    </div>
  {{else}}
    <button type="button" class="btn btn-default" {{action "setVisibility" "right" on='click'}}>
      <a href="#" >{{elem/icon-base name="chevron-left"}}</a>
    </button> 
  {{/if}}	{{!-- if this.layout.right.visible --}}
    </div>

  </div>


</div>

{{outlet}}
